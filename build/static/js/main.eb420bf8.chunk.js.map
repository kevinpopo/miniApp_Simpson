{"version":3,"sources":["assets/all.png","assets/baby.png","assets/mom.png","assets/dad.png","assets/sis.png","assets/son.png","assets/babyIcon.png","assets/monIcon.png","assets/dadIcon.png","assets/sisIcon.png","assets/sonIcon.png","components/header.js","components/cardCollection.js","components/cards.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Component","CardCollection","props","this","hasBabyCard","hasMomCard","hasSisCard","hasDadCard","hasSonCard","src","all","alt","baby","mom","sis","dad","son","prototypes","PropTypes","bool","Cards","babyIcon","momIcon","dadIcon","sisIcon","sonIcon","Footer","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.eb420bf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/all.7bb25df0.png\";","module.exports = __webpack_public_path__ + \"static/media/baby.852dad5e.png\";","module.exports = __webpack_public_path__ + \"static/media/mom.9e9b6bfd.png\";","module.exports = __webpack_public_path__ + \"static/media/dad.3cfb1bb4.png\";","module.exports = __webpack_public_path__ + \"static/media/sis.007bc1dc.png\";","module.exports = __webpack_public_path__ + \"static/media/son.f04b46aa.png\";","module.exports = __webpack_public_path__ + \"static/media/babyIcon.b6766ee3.png\";","module.exports = __webpack_public_path__ + \"static/media/monIcon.ec51322d.png\";","module.exports = __webpack_public_path__ + \"static/media/dadIcon.3af3452d.png\";","module.exports = __webpack_public_path__ + \"static/media/sisIcon.cb27f71f.png\";","module.exports = __webpack_public_path__ + \"static/media/sonIcon.2869811e.png\";","import React, { Component } from \"react\";\r\nimport \"./header.css\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header-container\">\r\n                <b>This is header</b>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport all from \"../assets/all.png\";\r\nimport baby from \"../assets/baby.png\";\r\nimport mom from \"../assets/mom.png\";\r\nimport dad from \"../assets/dad.png\";\r\nimport sis from \"../assets/sis.png\";\r\nimport son from \"../assets/son.png\";\r\nimport \"./cardCollection.css\";\r\n\r\nclass CardCollection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            hasBabyCard,\r\n            hasMomCard,\r\n            hasSisCard,\r\n            hasDadCard,\r\n            hasSonCard,\r\n        } = this.props;\r\n        return (\r\n            <div className=\"collection-container\">\r\n                <header className=\"App-header\">\r\n                    <img src={all} className=\"App-logo\" alt=\"logo\" />\r\n                    {hasBabyCard && (\r\n                        <img src={baby} className=\"App-logo\" alt=\"logo\" />\r\n                    )}\r\n                    {hasMomCard && (\r\n                        <img src={mom} className=\"App-logo\" alt=\"logo\" />\r\n                    )}\r\n                    {hasSisCard && (\r\n                        <img src={sis} className=\"App-logo\" alt=\"logo\" />\r\n                    )}\r\n                    {hasDadCard && (\r\n                        <img src={dad} className=\"App-logo\" alt=\"logo\" />\r\n                    )}\r\n                    {hasSonCard && (\r\n                        <img src={son} className=\"App-logo\" alt=\"logo\" />\r\n                    )}\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCardCollection.prototypes = {\r\n    hasBabyCard: PropTypes.bool,\r\n    hasMomCard: PropTypes.bool,\r\n    hasSisCard: PropTypes.bool,\r\n    hasDadCard: PropTypes.bool,\r\n    hasSonCard: PropTypes.bool,\r\n};\r\n\r\nexport default CardCollection;\r\n","import React, { Component } from \"react\";\r\nimport babyIcon from \"../assets/babyIcon.png\";\r\nimport momIcon from \"../assets/monIcon.png\";\r\nimport dadIcon from \"../assets/dadIcon.png\";\r\nimport sisIcon from \"../assets/sisIcon.png\";\r\nimport sonIcon from \"../assets/sonIcon.png\";\r\nimport \"./cards.css\";\r\n\r\nclass Cards extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"cards-container\">\r\n                <img src={babyIcon} className=\"card\" alt=\"\" />\r\n                <img src={momIcon} className=\"card\" alt=\"\" />\r\n                <img src={dadIcon} className=\"card\" alt=\"\" />\r\n                <img src={sisIcon} className=\"card\" alt=\"\" />\r\n                <img src={sonIcon} className=\"card\" alt=\"\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cards;\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer-container\">\r\n                <b>This is Footer</b>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport CardCollection from \"./components/cardCollection\";\nimport Cards from \"./components/cards\";\nimport Footer from \"./components/footer\";\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header />\n                <CardCollection />\n                <Cards />\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}